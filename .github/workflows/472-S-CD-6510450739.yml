name: Main Branch CI/CD

permissions:
  contents: write
  packages: write

run-name: ${{ github.actor }} is deploying to production ðŸš€

on:
  push:
    branches: 
      - main

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    env:
      DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_HUB_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      FRONTEND_IMAGE: pichanok/devops-frontend
      BACKEND_IMAGE: pichanok/devops-backend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Get latest tag version
        id: get_tag
        run: |
            LATEST_TAG=$(git tag --sort=-v:refname | head -n 1)
            if [[ -z "$LATEST_TAG" ]]; then
              NEW_TAG="v1.0.0"
            else
              NEW_TAG=$(echo $LATEST_TAG | awk -F. '{print $1"."$2"."$3+1}')
            fi
            echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
          
      - name: Build & Push Frontend Image
        working-directory: ./frontend
        run: |
            docker build -t ${{ env.FRONTEND_IMAGE }}:${{ env.NEW_TAG }} .
            docker push ${{ env.FRONTEND_IMAGE }}:${{ env.NEW_TAG }}
  
      - name: Build & Push Backend Image
        working-directory: ./backend
        run: |
            docker build -t ${{ env.BACKEND_IMAGE }}:${{ env.NEW_TAG }} .
            docker push ${{ env.BACKEND_IMAGE }}:${{ env.NEW_TAG }}
  
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
              tag_name: ${{ env.NEW_TAG }}
              name: Release ${{ env.NEW_TAG }}
              body: |
                ðŸš€ **New Release: ${{ env.NEW_TAG }}**  
                - Frontend Image: `${{ env.FRONTEND_IMAGE }}:${{ env.NEW_TAG }}`
                - Backend Image: `${{ env.BACKEND_IMAGE }}:${{ env.NEW_TAG }}`
              draft: false
              prerelease: false